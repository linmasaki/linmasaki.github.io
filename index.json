[{"body":"這是我在 Hugo 上的第一篇貼文！！！\n","link":"https://linmasaki.github.io/posts/2021/12/my-first-article/","section":"posts","tags":null,"title":"My First Article on Hugo"},{"body":"","link":"https://linmasaki.github.io/posts/","section":"posts","tags":null,"title":"Posts"},{"body":"","link":"https://linmasaki.github.io/","section":"","tags":null,"title":"小Co鬥阿邦兔XII"},{"body":"1. 安裝 Hugo Hugo 提供了五花八門的安裝方式，且官方的教學文件也寫的非常清楚，挑一個自己熟悉的方式來安裝應該不難，因為本身是用 MacBook 來當做開發機，所以選擇了 Homebrew 來安裝 Hugo，步驟如下\n1# 1. 安裝 Homebrew（已安裝的可跳過該步驟） 2$ /bin/bash -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\u0026#34; 3 4# 2. 安裝 Hugo 5$ brew install hugo 6 7# 3. 驗證安裝是否成功 8$ hugo version 出現類似下圖的訊息即代表安裝成功\n2. 建立專案目錄 輸入以下指令建立新的 Hugo 專案\n1# 將 \u0026lt;your_blog_name\u0026gt; 換成你想要的名稱 2$ hugo new site \u0026lt;your_blog_name\u0026gt; 3 4# 進入 \u0026lt;your_blog_name\u0026gt; 資料夾裡 5$ cd \u0026lt;your_blog_name\u0026gt; 6 7# 查看目錄結構應如下圖所示（版本 v0.88.1） 8$ ls -l 9. 10├── archetypes 11├── config.toml 12├── content 13├── data 14├── layouts 15├── static 16└── themes 3. 添加主題（Theme） 先到官方主題集裡選擇你中意的樣式，例如，我選擇了 Clarity，然後輸入以下指令將主題加入\n1$ git init 2$ git submodule add -f https://github.com/chipzoller/hugo-clarity themes/hugo-clarity 3$ cp -a themes/hugo-clarity/exampleSite/* . # 此步驟會因主題而異，一般來說只需上面兩個步驟即可 4. 編輯 Hugo 設定檔（config.toml）並建立第一篇文章 使用任意編輯器打開目錄裡的 config.toml 或是 config/_default/config.toml 設定檔，根據以下範例修改成符合自己需求的設定值，更多設定方式可參考官網文件以及自己選擇的主題官方文件，剛開始建議可以選用較簡單一點的主題，不然就會像我一樣，踩了一堆地雷把自己炸的體無完膚，然後還搞不定（眼神死...\n1# Basic Settings 2baseURL = \u0026#39;https://linmasaki.github.io\u0026#39; # linmasaki 改成你的 Github 帳號名稱 3title = \u0026#39;小Co鬥阿邦兔XII\u0026#39; # 網站標題 4languageCode = \u0026#39;zh-tw\u0026#39; 5 6# Theme Settings 7theme = \u0026#39;hugo-clarity\u0026#39; # 主題名稱 8 9# URL Structure Settings 10[permalinks] 11 posts = \u0026#39;/:section/:year/:month/:filename\u0026#39; # 網址路徑規則，同時也是檔案路徑，可參考 https://gohugo.io/content-management/urls 以上的設定都搞定後，就可以開始使用 Hugo 指令建立第一篇自己的文章\n1$ hugo new posts/my-first-article.md 然後使用編輯器打開剛建立的 my-first-article.md，隨意輸入一些內容，如\n1--- 2title: My First Article on Hugo 3date: 2021-11-20T07:30:50+08:00 4draft: false # 該文章是否為草稿，值為 false 時才能在正式發佈後看到該文章 5summary: 這裡是放 Summary 的地方！ 6--- 7 8這是我在 Hugo 上的第一篇貼文！！！ 完成後將檔案儲存，接著使用以下其中一種指令編譯並啟動 Hugo 內建的伺服器\n1# 只列出非草稿的文章（draft 值為 false） 2$ hugo server 3 4# 列出全部文章 5$ hugo server -D 打開瀏覽器網址輸入 http://localhost:1313，登登登～剛剛新增的文章已經出現在畫面上了\n5. 將原始碼上傳並發佈到 GitHub Pages 上 先在 GitHub 上建立 2 個 Repository，一個用來放專案原始碼（如：CoCoBlog），另一個則是放 GitHub Pages 用的靜態網頁檔（public 資料夾下的檔案），此 GitHub Pages 用的 Repository 需設為 public 且只能命名為 \u0026lt;your_github_id\u0026gt;.github.io（見下圖），例如：linmasaki.github.io。\n回到專案根目錄，依序輸入以下指令\n1# 連結放置專案原始碼的 Repository 2$ git remote add origin https://github.com/linmasaki/CoCoBlog.git 3 4# 編譯原始碼以確保產生的檔案為最新版本 5$ hugo 6 7# 切換到 public 資料夾下，連結 GitHub Pages 的 Repository：https://github.com/\u0026lt;your_github_id\u0026gt;/\u0026lt;your_github_id\u0026gt;.github.io.git 8$ cd public 9$ git init 10$ git remote add origin https://github.com/linmasaki/linmasaki.github.io.git 11$ git add . 12$ git commit -m \u0026#34;My first post!\u0026#34; 13$ git push origin main 14 15# 回主專案，將 GitHub Pages 的 Repository 加成子模組 16$ cd .. 17$ git submodule add -f https://github.com/linmasaki/linmasaki.github.io.git public/ 18$ git add . 19git commit -m \u0026#34;First commit\u0026#34; 20git push origin main 接著前往 GitHub 放置 Pages 的 Repository（\u0026lt;your_github_id\u0026gt;.github.io），1. 點選 Settings 選項，2. 再點選左側欄的 Pages，3. 在 Build and deployment 項目裡選擇你要部屬的方式並儲存，參考下圖\n靜待些許時間後，在瀏覽器輸入網址 https://\u0026lt;your_github_id\u0026gt;.github.io，就會看到自己使用 Hugo 建立的部落格已經成功發布到 GitHub 上了！\n","link":"https://linmasaki.github.io/posts/2021/11/hugo-intro/","section":"posts","tags":null,"title":"在 GitHub 上使用 Hugo 架設個人部落格"},{"body":"","link":"https://linmasaki.github.io/categories/","section":"categories","tags":null,"title":"Categories"},{"body":"","link":"https://linmasaki.github.io/series/","section":"series","tags":null,"title":"Series"},{"body":"","link":"https://linmasaki.github.io/tags/","section":"tags","tags":null,"title":"Tags"}]